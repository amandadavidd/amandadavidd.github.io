(function($, window){
  var $accessButton = $('#access_button, [href="#get-offers"]');
  var $email = $('#unlock_email');
  var $offerModal = $('#offer_modal');
  var $unlockForm = $('#unlock_form');
  var $unlockModal = $('#unlock_modal');
  var $shareButton = $('.share-btn');
  var $helpButton = $('#help-button');
  var $helpModal = $('#help_modal');

  var $alert = $('<div />').addClass('alert alert-warning');
  var alertInterval;
  var offerComplete = false;
  var isMobile = false;
  var send_unlock_url;

  $unlockModal.on('hidden', resetUnlockModal);

  function get_random_number() {
    var min = 450;
    var max = 1870;
    num = Math.floor(Math.random() * (max - min + 1)) + min;
    if(num > 999) {
      var new_num = num - 1000;
      if(new_num < 10) {
        new_num = '00' + new_num;
      } else if(new_num < 100) {
        new_num = '0' + new_num;
      }
      return '1,' + new_num;
    } else {
      return num;
    }
  }

  function offer_templ(vals, item_class = '') {
    var instruction = "Complete this quick survey!";
    if(vals.instructions) {
      var instruction = vals.instructions;
    }
    return "<div class='offer-row offer-templ "+item_class+"'>" + 
          "<a href='"+vals.offer_link+"&gateid="+vals.gateid+"' class='external offer-link it-link' target='_blank' data-name='"+vals.offer_name+"' data-img='"+vals.icon_url+"'>" + 
          "<div class='it-image'><img src='"+vals.icon_url+"'></div>" + 
          "<div class='it-content'>" + 
          "<div class='it-heading'>" + 
          "<div class='it-title'>"+vals.offer_name+"<div>" + 
          "<i class='fa fa-star'></i> <i class='fa fa-star'></i> <i class='fa fa-star'></i> <i class='fa fa-star'></i> <i class='fa fa-star'></i>" + 
          " ("+get_random_number()+")" + 
          "</div></div><div class='it-after'></div></div>" + 
          "<div class='it-subtitle'><i class='fa fa-cloud-download'></i> FREE</div>" + 
          "<div class='it-description'>"+instruction+"</div>" + 
          "</div></a>" +
          "</div>";
  }

  function campaign_templ(vals, item_class = '') {
    return "<div class='offer-row offer-templ "+item_class+"'>" + 
          "<a href='"+vals.offer_link+"&cacheurl="+encodeURIComponent(Base64.encode(document.referrer))+"' class='external offer-link it-link' target='_blank' data-name='"+vals.offer_name+"' data-img='"+vals.icon_url+"'>" + 
          "<div class='it-image'><img src='"+vals.icon_url+"'></div>" + 
          "<div class='it-content'>" + 
          "<div class='it-heading'>" + 
          "<div class='it-title'>"+vals.offer_name+"<div>" + 
          "<i class='fa fa-star'></i> <i class='fa fa-star'></i> <i class='fa fa-star'></i> <i class='fa fa-star'></i> <i class='fa fa-star'></i>" + 
          " ("+get_random_number()+")" + 
          "</div></div><div class='it-after'></div></div>" + 
          "<div class='it-subtitle'><i class='fa fa-cloud-download'></i> FREE</div>" + 
          "<div class='it-description'>"+vals.offer_desc+"</div>" + 
          "</div></a>" +
          "</div>";
  }

  function getRandomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  function render_campaigns(campaign_url, gateid, $container_elem, callback) {
    var offers = '';

    $.getJSON(campaign_url, function(data)
    {
      var i = 1;
      var top_rating = getRandomInt(7000,9000);
      if (data.campaigns) {
        $.each(data.campaigns, function(o, campaign) {
          var rating_icon = "assets/images/modal-stars/stars_5.png";
          
          var vals = new Object();
          vals.index = i;
          vals.icon_url = campaign.creative_url;
          vals.offer_name = campaign.title;
          if (campaign.description)
          {
            vals.offer_desc = campaign.description;
          }
          else 
          {
            vals.offer_desc = "";
          }
          if (campaign.description_2)
          {
            vals.offer_desc_2 = campaign.description_2;
          }
          else
          {
            vals.offer_desc_2 = "";
          }   
          vals.offer_link = campaign.tracking_url;
          vals.rating_count = top_rating;
          vals.rating_icon = rating_icon;
          vals.gateid = gateid;

          offers += campaign_templ(vals, 'camp_'+i);

          top_rating = top_rating - getRandomInt(100,250);

          i++;
        });
      }
      $container_elem.prepend(offers);
      
      $container_elem.find('.offer_list li a').tooltip({
        container: 'body',
        placement: 'left',
        html: true
      }).on('click', { callback: callback }, function(){
        //Setup GA event tracking
        if (typeof ga === 'function') {
          ga('send', 'event', 'cpc_campaign', 'click');
        }
        if (typeof callback === 'function') {
          jQuery('div.tooltip').remove();
          callback();
        }
      }); 

      $(".go_back").click(function(){
        $('.offer_step_2').addClass('none');
        $('.description-bg, #offer_html, .bottom_instructions').removeClass('none');
      });
    });
  }

  function render_offers(offer_url, gateid, $container_elem, callback) {
    var offers = '';

    $accessButton.on('click', function(event){
      event.preventDefault();
      //$(".offer_1").detach().prependTo('#offer_html');
      $offerModal.modal();
    });

    $.getJSON(offer_url,
    function(data)
    {
      var i = 1;
      var top_rating = getRandomInt(7000,9000);

      if (data.campaigns) {
        $.each(data.campaigns, function(o, offer) {
          var found_prev_image = false;
          var found_creative = false;
          var offer_size = 0;
          var image_url = false;
          //Look for 70x70 creative, if not found, look for 300X240 preview, if not found, no-thumb
          try 
          {
            $.each(offer.creatives, function(o, offer_creative) {
              if (offer_creative.size == "70x70")
              {
                found_creative = true;
                offer_size = offer_creative.size;
                image_url = offer_creative.url;
                console.log(image_url);
              }
            });
          }
          catch(err) {
            var found_creative = false;
          }
          if(!found_creative)
          {
            try 
            {
              $.each(offer.previews, function(o, offer_prev) {
                if (offer_prev.size == "300x240" || offer_prev.size == "300x250")
                {
                  found_prev_image = true;
                  offer_size = offer_prev.size;
                  image_url = offer_prev.url;
                }
              });
            }
            catch(err) {
              var found_prev_image = false;
            }
          }

          if (i == 1) {
            var rating_icon = "assets/images/modal-stars/stars_5.png";
          } else if (i == 2) {
            var rating_icon = "assets/images/modal-stars/stars_4.5.png";
          } else if (i == 3) {
            var rating_icon = "assets/images/modal-stars/stars_4.25.png";
          } else if (i == 4) {
            var rating_icon = "assets/images/modal-stars/stars_4.25.png";
          } else if (i == 5) {
            var rating_icon = "assets/images/modal-stars/stars_4.25.png";
          } else if (i == 6) {
            var rating_icon = "assets/images/modal-stars/stars_4.png";
          } else {
            var rating_icon = "assets/images/modal-stars/stars_4.png";
          }

          if (!image_url)
          {
            image_url = "assets/images/modal-stars/"+i+".png";
          }
          
          var vals = new Object();
          vals.index = i;
          vals.icon_url = image_url;
          vals.offer_conversion = offer.description;
          vals.instructions = offer.instructions;
          vals.offer_name = offer.title;
          vals.offer_link = offer.link;
          vals.rating_count = top_rating;
          vals.rating_icon = rating_icon;
          vals.gateid = gateid;

          offers += offer_templ(vals, 'offer_'+i);

          top_rating = top_rating - getRandomInt(100,250);

          i++;
        });
      } else {
        //offers += '<div class="no-offers alert-info"><h3>No Offers Found</h3></div>';
      }
      
      $container_elem.append(offers);
      
      $container_elem.find('.offer_list li a').tooltip({
        container: 'body',
        placement: 'left',
        html: true
      }).on('click', { callback: callback }, function(){
        //Setup GA event tracking
        if (typeof ga === 'function') {
          ga('send', 'event', 'offer_link', 'click');
        }
        if (typeof callback === 'function') {
          jQuery('div.tooltip').remove();
          callback();
        }
      });

      $(".go_back").click(function(){
        $('.offer_step_2').addClass('none');
        $('.description-bg, #offer_html, .bottom_instructions').removeClass('none');
      });
    });
  }

  function check_completion(check_url, interval, is_mobile) {
    var isMobile = is_mobile;
    function run_check()
    {
      if (offerComplete) { return; }

      $.getJSON(check_url,
      function(data)
      {
        if (data.status == "complete")
        {
          offerComplete = true;
          $accessButton
            .off()
            .on('click', function(event){
              event.preventDefault();
              $unlockModal.modal();
            });
          $offerModal.modal('hide');
          if (!isMobile)
          {
            window.PreventExitSplash = true;
            $(".disregard").click(function(){
              $(".advertisement").hide();
            });
            $(".unlock-submit").click(function(){
              top.location.href = data.lock_url;
            });               
            $("#unlock_modal").modal();
          }
          if (isMobile)
          {          
            top.location.href = data.lock_url;
          }
        }
        else {
          if (data.completed >= 1)
          {
            if($('#f_offer').val() != 2) { 
              $("#percentage").html("50");
              $("#app_download_count").html("("+data.completed+"/"+data.required+")")
              $(".linklock-description").after("<input type='hidden' id='f_offer' value='2'>");
            }
          }
        }
      });
    }

    setInterval(run_check, interval);
    run_check();
  }

  function tick_countdown()
  {
    var current_int = $(".countdown").html();
    $(".countdown").html(current_int - 1);
    if (current_int == 1)
    {
      $(".countdown_div").hide();
      $(".unlock-submit").removeAttr("disabled");
      $(".countdown_complete").show();
    }
  }

  function sendAlert(message, $elem, delay) {
    if (message === null) {
      clearTimeout(alertInterval);
      $alert.remove();
      return;
    }

    $elem.append( $alert.show().text(message) );

    if (delay) {
      clearTimeout(alertInterval);
      alertInterval = window.setTimeout(function(){
        $alert.fadeOut(400, function(){
          $alert.remove();
        });
      }, delay);
    }
  }

  function unlockAjax(event) {
    event.preventDefault();
    var emailRegex = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;

    sendAlert(null);

    if (!$email.val()) {
      sendAlert('Please input an email.', $unlockForm, 2000);
      return;
    }

    if (!emailRegex.test($email.val())) {
      sendAlert('Please input a valid email.', $unlockForm, 2000);
      return;
    }

    sendAlert('Sending email...', $unlockForm);

    $.ajax({
      type: "POST",
      url: send_unlock_url,
      data: $unlockForm.serialize(),
      dataType: 'jsonp'
    })
    .fail(function(data){
      sendAlert('Email has not been sent, please try again.', $unlockForm, 5000);
    })
    .done(function(data){
      if (data.status == 'success') {
        $unlockModal.find('.unlock-submit')
          .off()
          .addClass('disabled');
        $unlockForm
          .off()
          .on('submit', function(){return false;});
        if (data.message) {
          sendAlert(data.message, $unlockForm);
        } else {
          sendAlert('Email has been successfully sent! Please check your inbox.', $unlockForm);
        }
      }

      if (data.status == 'error') {
        if (data.message) {
          sendAlert(data.message, $unlockForm);
        } else {
          sendAlert('The email has not been processed, please try again.', $unlockForm, 5000);
        }
      }
    });

  }

  function resetUnlockModal() {

    $('.unlock-submit').unbind( "click" );
    $unlockModal.find('.unlock-submit')
      .on('click', unlockAjax)
      .removeClass('disabled');
    $unlockForm.on('submit', unlockAjax);

    $unlockForm.find('#unlock_email').val('');
    sendAlert(null);
  }

  //Expose methods to window
  window.linklocker_offers = {
    check_completion: check_completion,
    render_offers: render_offers,
    render_campaigns: render_campaigns,
  };

  $shareButton.click(function(){
    window.open('https://www.facebook.com/sharer/sharer.php?u='+encodeURIComponent(share_link), 'facebook_share', 'height=320, width=640, toolbar=no, menubar=no, scrollbars=no, resizable=no, location=no, directories=no, status=no'); 
    window.setTimeout(function(){
      $(".share_collection").hide();
      $(".email_collection").show();
      $(".unlock-submit").removeAttr("disabled");
    }, 10000);
  });

  $helpModal.on('shown', function() {
    $offerModal.addClass('hidden');
  }).on('hide', function() {
    $offerModal.removeClass('hidden');
  });

})(jQuery, window);

    var Base64 = {

    _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",

    encode: function(input) {
        var output = "";
        var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
        var i = 0;

        input = Base64._utf8_encode(input);

        while (i < input.length) {

            chr1 = input.charCodeAt(i++);
            chr2 = input.charCodeAt(i++);
            chr3 = input.charCodeAt(i++);

            enc1 = chr1 >> 2;
            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
            enc4 = chr3 & 63;

            if (isNaN(chr2)) {
                enc3 = enc4 = 64;
            } else if (isNaN(chr3)) {
                enc4 = 64;
            }

            output = output + this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) + this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);

        }

        return output;
    },


    decode: function(input) {
        var output = "";
        var chr1, chr2, chr3;
        var enc1, enc2, enc3, enc4;
        var i = 0;

        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");

        while (i < input.length) {

            enc1 = this._keyStr.indexOf(input.charAt(i++));
            enc2 = this._keyStr.indexOf(input.charAt(i++));
            enc3 = this._keyStr.indexOf(input.charAt(i++));
            enc4 = this._keyStr.indexOf(input.charAt(i++));

            chr1 = (enc1 << 2) | (enc2 >> 4);
            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
            chr3 = ((enc3 & 3) << 6) | enc4;

            output = output + String.fromCharCode(chr1);

            if (enc3 != 64) {
                output = output + String.fromCharCode(chr2);
            }
            if (enc4 != 64) {
                output = output + String.fromCharCode(chr3);
            }

        }

        output = Base64._utf8_decode(output);

        return output;

    },

    _utf8_encode: function(string) {
        string = string.replace(/\r\n/g, "\n");
        var utftext = "";

        for (var n = 0; n < string.length; n++) {

            var c = string.charCodeAt(n);

            if (c < 128) {
                utftext += String.fromCharCode(c);
            }
            else if ((c > 127) && (c < 2048)) {
                utftext += String.fromCharCode((c >> 6) | 192);
                utftext += String.fromCharCode((c & 63) | 128);
            }
            else {
                utftext += String.fromCharCode((c >> 12) | 224);
                utftext += String.fromCharCode(((c >> 6) & 63) | 128);
                utftext += String.fromCharCode((c & 63) | 128);
            }

        }

        return utftext;
    },

    _utf8_decode: function(utftext) {
        var string = "";
        var i = 0;
        var c = c1 = c2 = 0;

        while (i < utftext.length) {

            c = utftext.charCodeAt(i);

            if (c < 128) {
                string += String.fromCharCode(c);
                i++;
            }
            else if ((c > 191) && (c < 224)) {
                c2 = utftext.charCodeAt(i + 1);
                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
                i += 2;
            }
            else {
                c2 = utftext.charCodeAt(i + 1);
                c3 = utftext.charCodeAt(i + 2);
                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
                i += 3;
            }

        }

        return string;
    }
  }